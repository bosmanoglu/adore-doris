#######################################
###   BASH Environment Variables    ###
#######################################
### SECTION=adore
[ -z "${ADOREFOLDER}"		] && ADOREFOLDER=${ADORESCR//\/scr/}
[ -z "${_rel_ADOREFOLDER}"	] && _rel_ADOREFOLDER='echo ${ADORESCR//\/scr/}'
#######################################
###  ADORE-BASH Run-Time Settings   ###
#######################################
[ -z "${projectFolder}"		] && projectFolder="."
[ -z "${tmpFolder}"		] && tmpFolder=${projectFolder}/tmp
[ -z "${_rel_tmpFolder}"	] && _rel_tmpFolder='echo ${projectFolder}/tmp'
[ -z "${outputFolder}"		] && outputFolder="."
[ -z "${processFolder}"		] && processFolder=${projectFolder}/process
[ -z "${_rel_processFolder}"	] && _rel_processFolder='echo ${projectFolder}/process'
[ -z "${dataFolder}"		] && dataFolder=${projectFolder}/data
[ -z "${_rel_dataFolder}"	] && _rel_dataFolder='echo ${projectFolder}/data'
[ -z "${runName}"		] && runName="default"
[ -z "${runFolder}"		] && runFolder=${processFolder}/${runName}
[ -z "${_rel_runFolder}"	] && _rel_runFolder='echo ${processFolder}/${runName}'
[ -z "${cropsFolder}"		] && cropsFolder=${runFolder}/crops
[ -z "${_rel_cropsFolder}"	] && _rel_cropsFolder='echo ${runFolder}/crops'
[ -z "${i12sFolder}"		] && i12sFolder=${runFolder}/i12s
[ -z "${_rel_i12sFolder}"	] && _rel_i12sFolder='echo ${runFolder}/i12s'
[ -z "${baselinesFolder}"	] && baselinesFolder=${runFolder}/baselines
[ -z "${_rel_baselinesFolder}"	] && _rel_baselinesFolder='echo ${runFolder}/baselines'
[ -z "${resampleFolder}"	] && resampleFolder=${runFolder}/resample
[ -z "${_rel_resampleFolder}"	] && _rel_resampleFolder='echo ${runFolder}/resample'
[ -z "${resampleMaster}"        ] && resampleMaster=""
[ -z "${adoreHistoryFile}"	] && adoreHistoryFile=${projectFolder}/.history
[ -z "${_rel_adoreHistoryFile}"	] && _rel_adoreHistoryFile='echo ${projectFolder}/.history'
[ -z "${dorisVersion}"          ] && dorisVersion=`doris -v 2>&1 |grep version | cut -f5 -d" "| cut -d"-" -f1`
[ -z "${_rel_dorisVersion}"     ] && _rel_dorisVersion='doris -v 2>&1 |grep version | cut -f5 -d" "| cut -d"-" -f1'
[ -z "${master}"		] && master=`ls -F ${dataFolder}/ 2>/dev/null |grep "/" | head -n 1|tr -d "/"|tr -d [:blank:] |tr -d "\n" 2>/dev/null`
[ -z "${slave}"			] && slave=`ls -F ${dataFolder}/  2>/dev/null | grep "/" | awk 'NR==2' | tr -d "/"| tr -d [:blank:] | tr -d "\n" 2>/dev/null`
[ -z "${excludesFile}"		] && excludesFile=${runFolder}/excludes
[ -z "${_rel_excludesFile}"	] && _rel_excludesFile='echo ${runFolder}/excludes'
[ -z "${scenes_exclude}" 	] && scenes_exclude=() 	#Empty array... 
[ -z "${scenes_include}" 	] && scenes_include=( `ls -F ${dataFolder}/  2>/dev/null | grep "/" | tr -d "/"` )  #List of folders in dataFolder.
[ -z "${_rel_scenes_include}" 	] && _rel_scenes_include='scenes rescan'
[ -z "${dataFile}" 		] && dataFile="DAT_01.001"    # slc data filename can be a regexp (dat.*, *.slc)
[ -z "${leaderFile}"		] && leaderFile=LEA_01.001  # slc leaderfilename can be a regexp
[ -z "${volumeFile}"		] && volumeFile=VDF_DAT.001 # slc volume filename can use regexp (vdf*)
[ -z "${nullFile}"		] && nullFile=NUL_01.001    # slc nul filename can be a regexp
[ -z "${unspecified}"		] && unspecified=""	#readinput.hh unspecified filenames are set to this
####### for Gamma Processing... m/s_readfiles
[ -z "${slcType}"         	] && slcType=""	#set to gamma for gamma slc's.
[ -z "${gammaParFile}"   	] && gammaParFile="*.pslcpar"
[ -z "${gammaSysFile}"   	] && gammaSysFile="System.par"
[ -z "${gammaByteSwap}"         ] && gammaByteSwap="0"
####### for resample
[ -z "${rs_az_buffer}"		] && rs_az_buffer="200"
[ -z "${rs_rg_buffer}"		] && rs_rg_buffer="200"
####### for dem
[ -z "${slc_rg_res}"		] && slc_rg_res="" #default is not set
[ -z "${slc_az_res}"		] && slc_az_res="" #default is not set
####### for raster
[ -z "${raster_format}"		] && raster_format="ras" #default is not set
####### for tandemx-bistatic
[ -z "${bistatic}"		] && bistatic="off" #default is off
####### for torque-pbs parallel
[ -z "${parallel}"		] && parallel="off" #default is off
[ -z "${parallel_options}"      ] && parallel_options="" #default is empty
####### for i12s pairs
[ -z "${pairsFile}"      	] && pairsFile=${runFolder}/${runName}_pairs.csv 
[ -z "${_rel_pairsFile}"	] && _rel_pairsFile='echo ${runFolder}/${runName}_pairs.csv'
[ -z "${pairs}"      	        ] && pairs=() #default is empty array
#######################################
###     Default Doris Settings      ###
#######################################
### SECTION=general
[ -z "${screen}"		] && screen=info
[ -z "${beep}"			] && beep=off
[ -z "${batch}" 		] && batch=on
[ -z "${overwrite}" 		] && overwrite=on
[ -z "${preview}" 		] && preview=off
[ -z "${listinput}" 		] && listinput=on
[ -z "${memory}" 		] && memory=500
[ -z "${logfile}" 		] && logfile=${outputFolder}/${runName}.log
[ -z "${_rel_logfile}" 		] && _rel_logfile='echo ${outputFolder}/${runName}.log'
[ -z "${m_resfile}" 		] && m_resfile=${outputFolder}/${master}.res
[ -z "${_rel_m_resfile}" 	] && _rel_m_resfile='echo ${outputFolder}/${master}.res'
[ -z "${s_resfile}" 		] && s_resfile=${outputFolder}/${slave}.res
[ -z "${_rel_s_resfile}" 	] && _rel_s_resfile='echo ${outputFolder}/${slave}.res'
[ -z "${i_resfile}" 		] && i_resfile=${outputFolder}/${master}_${slave}.res
[ -z "${_rel_i_resfile}"	] && _rel_i_resfile='echo ${outputFolder}/${master}_${slave}.res'
[ -z "${orb_interp}" 		] && orb_interp="polyfit"
[ -z "${orb_prm}" 		] && orb_prm="pos"
[ -z "${dumpbaseline}" 		] && dumpbaseline="1 1" # default is "0 0" but fails at readinput.cc 1271
[ -z "${height}" 		] && height=0.0
[ -z "${tiepoint}"		] && tiepoint="0.0 0.0 0.0"
[ -z "${m_rg_t_error}" 		] && m_rg_t_error="0.0"
[ -z "${m_az_t_error}" 		] && m_az_t_error="0.0"
[ -z "${s_rg_t_error}" 		] && s_rg_t_error="0.0"
[ -z "${s_az_t_error}" 		] && s_az_t_error="0.0"
################### m_readfiles
### SECTION=m_readfiles
[ -z "${m_in_method}" 		] && m_in_method=ERS
[ -z "${m_in_dat}" 		] && m_in_dat=`ls ${dataFolder}/${master}/${dataFile} 2>/dev/null | tr -d '\n'`
[ -z "${_rel_m_in_dat}" 	] && _rel_m_in_dat='ls ${dataFolder}/${master}/${dataFile} 2>/dev/null | tr -d "\n"'
[ -z "${m_in_vol}" 		] && m_in_vol=`ls "${dataFolder}/${master}/${volumeFile}" 2>/dev/null | tr -d '\n'`
[ -z "${_rel_m_in_vol}" 	] && _rel_m_in_vol='ls ${dataFolder}/${master}/${volumeFile} 2>/dev/null | tr -d "\n"'
[ -z "${m_in_lea}" 		] && m_in_lea=`ls "${dataFolder}/${master}/${leaderFile}" 2>/dev/null | tr -d '\n'`
[ -z "${_rel_m_in_lea}" 	] && _rel_m_in_lea='ls ${dataFolder}/${master}/${leaderFile} 2>/dev/null | tr -d "\n"'
[ -z "${m_in_null}" 		] && m_in_null=`ls "${dataFolder}/${master}/${nullFile}"  2>/dev/null | tr -d '\n'`
[ -z "${_rel_m_in_null}" 	] && _rel_m_in_null='ls ${dataFolder}/${master}/${nullFile} 2>/dev/null | tr -d "\n"'
################### m_porbits
### SECTION=m_porbits
[ -z "${m_orbdir}" 		] && m_orbdir="${unspecified}"
[ -z "${m_orb_interval}" 	] && m_orb_interval=1
[ -z "${m_orb_extratime}" 	] && m_orb_extratime=10
[ -z "${m_orb_dump}" 		] && m_orb_dump=-1
################### m_crop
### SECTION=m_crop
[ -z "${m_crop_in}" 		] && m_crop_in=${m_in_dat}
[ -z "${_rel_m_crop_in}" 	] && _rel_m_crop_in='echo ${m_in_dat}'
[ -z "${m_crop_out}" 		] && m_crop_out=${outputFolder}/${master}.crop
[ -z "${_rel_m_crop_out}"	] && _rel_m_crop_out='echo ${outputFolder}/${master}.crop'
[ -z "${m_dbow}"		] && m_dbow="0 0 0 0"
[ -z "${m_dbow_geo}" 		] && m_dbow_geo="0 0 0 0"
################### m_simamp
### SECTION=m_simamp
[ -z "${sam_in_dem}" 		] && sam_in_dem="${unspecified}"
[ -z "${_rel_sam_in_dem}" 	] && _rel_sam_in_dem='echo ${crd_in_dem}'
[ -z "${sam_in_format}"		] && sam_in_format="I2"
[ -z "${_rel_sam_in_format}"	] && _rel_sam_in_format='echo ${crd_in_format}'
[ -z "${sam_in_size}" 		] && sam_in_size="6000 4800"
[ -z "${_rel_sam_in_size}" 	] && _rel_sam_in_size='echo ${crd_in_size}'
[ -z "${sam_in_delta}" 		] && sam_in_delta="0.00833333333333333333 0.00833333333333333333"
[ -z "${_rel_sam_in_delta}" 	] && _rel_sam_in_delta='echo ${crd_in_delta}'
[ -z "${sam_in_ul}" 		] && sam_in_ul="89.995833333333333333 -19.995833333333333333"
[ -z "${_rel_sam_in_ul}" 	] && _rel_sam_in_ul='echo ${crd_in_ul}'
[ -z "${sam_in_nodata}"		] && sam_in_nodata="-9999"
[ -z "${_rel_sam_in_nodata}"	] && _rel_sam_in_nodata='echo ${crd_in_nodata}'
[ -z "${sam_out_file}" 		] && sam_out_file="${outputFolder}/${master}.sam"
[ -z "${_rel_sam_out_file}" 	] && _rel_sam_out_file='echo ${outputFolder}/${master}.sam'
[ -z "${sam_out_dem}" 		] && sam_out_dem="${outputFolder}/${master}.samdem"
[ -z "${_rel_sam_out_dem}" 	] && _rel_sam_out_dem='echo ${outputFolder}/${master}.samdem'
[ -z "${sam_out_dem_lp}" 	] && sam_out_dem_lp="${outputFolder}/${master}.samdemlp"
[ -z "${_rel_sam_out_dem_lp}" 	] && _rel_sam_out_dem_lp='echo ${outputFolder}/${master}.samdemlp'
[ -z "${sam_out_theta_lp}" 	] && sam_out_theta_lp="${outputFolder}/${master}.samthetalp"
[ -z "${_rel_sam_theta_lp}" 	] && _rel_sam_out_theta_lp='echo ${outputFolder}/${master}.samthetalp'
################### m_timing
### SECTION=m_timing
[ -z "${mte_method}" 		] && mte_method="magspace"
[ -z "${mte_in_pos}" 		] && mte_in_pos="${unspecified}"
[ -z "${mte_nwin}" 		] && mte_nwin="16"
[ -z "${mte_winsize}" 		] && mte_winsize="256 128"
[ -z "${mte_acc}" 		] && mte_acc="32 32"
[ -z "${mte_initoff}" 		] && mte_initoff="0 0"
################### m_ovs
### SECTION=m_ovs
[ -z "${m_ovs_out}" 		] && m_ovs_out="${outputFolder}/${master}.ovs"
[ -z "${_rel_m_ovs_out}" 	] && _rel_m_ovs_out='echo ${outputFolder}/${master}.ovs'
[ -z "${m_ovs_out_format}"	] && m_ovs_out_format="ci2"
[ -z "${m_ovs_fact_rng}" 	] && m_ovs_fact_rng="2"
[ -z "${m_ovs_fact_azi}" 	] && m_ovs_fact_azi="2"
[ -z "${m_ovs_kernelsize}"	] && m_ovs_kernelsize="16"
################### s_readfiles
### SECTION=s_readfiles
[ -z "${s_in_method}" 		] && s_in_method=${m_in_method}
[ -z "${_rel_s_in_method}" 	] && _rel_s_in_method='echo ${m_in_method}'
[ -z "${s_in_dat}" 		] && s_in_dat=`ls ${dataFolder}/${slave}/${dataFile} 2>/dev/null | tr -d '\n'`
[ -z "${_rel_s_in_dat}"		] && _rel_s_in_dat='ls ${dataFolder}/${slave}/${dataFile} 2>/dev/null | tr -d "\n"'
[ -z "${s_in_vol}" 		] && s_in_vol=`ls ${dataFolder}/${slave}/${volumeFile} 2>/dev/null | tr -d '\n'`
[ -z "${_rel_s_in_vol}" 	] && _rel_s_in_vol='ls ${dataFolder}/${slave}/${volumeFile} 2>/dev/null | tr -d "\n"'
[ -z "${s_in_lea}" 		] && s_in_lea=`ls ${dataFolder}/${slave}/${leaderFile} 2>/dev/null | tr -d '\n'`
[ -z "${_rel_s_in_lea}" 	] && _rel_s_in_lea='ls ${dataFolder}/${slave}/${leaderFile} 2>/dev/null | tr -d "\n"'
[ -z "${s_in_null}" 		] && s_in_null=`ls ${dataFolder}/${slave}/${nullFile}  2>/dev/null | tr -d '\n'`
[ -z "${_rel_s_in_null}" 	] && _rel_s_in_null='ls ${dataFolder}/${slave}/${nullFile} 2>/dev/null | tr -d "\n"'
################### s_porbits
### SECTION=s_porbits
[ -z "${s_orbdir}" 		] && s_orbdir=${m_orbdir}
[ -z "${_rel_s_orbdir}" 	] && _rel_s_orbdir='echo ${m_orbdir}'
[ -z "${s_orb_interval}" 	] && s_orb_interval=${m_orb_interval}
[ -z "${_rel_s_orb_interval}" 	] && _rel_s_orb_interval='echo ${m_orb_interval}'
[ -z "${s_orb_extratime}" 	] && s_orb_extratime=${m_orb_extratime}
[ -z "${_rel_s_orb_extratime}" 	] && _rel_s_orb_extratime='echo ${m_orb_extratime}'
[ -z "${s_orb_dump}" 		] && s_orb_dump=${m_orb_dump}
[ -z "${_rel_s_orb_dump}" 	] && _rel_s_orb_dump='echo ${m_orb_dump}'
################### s_crop
### SECTION=s_crop
[ -z "${s_crop_in}" 		] && s_crop_in=${s_in_dat}
[ -z "${_rel_s_crop_in}" 	] && _rel_s_crop_in='echo ${s_in_dat}'
[ -z "${s_crop_out}" 		] && s_crop_out="${outputFolder}/${slave}.crop"
[ -z "${_rel_s_crop_out}" 	] && _rel_s_crop_out='echo ${outputFolder}/${slave}.crop'
[ -z "${s_dbow}"		] && s_dbow="0 0 0 0"
[ -z "${s_dbow_geo}" 		] && s_dbow_geo="${m_dbow_geo}"
[ -z "${_rel_s_dbow_geo}"	] && _rel_s_dbow_geo='echo ${m_dbow_geo}'
################### s_ovs
### SECTION=s_ovs
[ -z "${s_ovs_out}" 		] && s_ovs_out="${outputFolder}/${slave}.ovs"
[ -z "${_rel_s_ovs_out}" 	] && _rel_s_ovs_out='echo ${outputFolder}/${slave}.ovs'
[ -z "${s_ovs_out_format}"	] && s_ovs_out_format="${m_ovs_out_format}"
[ -z "${_rel_s_ovs_out_format}"	] && _rel_s_ovs_out_format='echo ${m_ovs_out_format}'
[ -z "${s_ovs_fact_rng}" 	] && s_ovs_fact_rng="${m_ovs_fact_rng}"
[ -z "${_rel_s_ovs_fact_rng}" 	] && _rel_s_ovs_fact_rng='echo ${m_ovs_fact_rng}'
[ -z "${s_ovs_fact_azi}" 	] && s_ovs_fact_azi="${m_ovs_fact_azi}"
[ -z "${_rel_s_ovs_fact_azi}" 	] && _rel_s_ovs_fact_azi='echo ${m_ovs_fact_azi}'
[ -z "${s_ovs_kernelsize}"	] && s_ovs_kernelsize="${m_ovs_kernelsize}"
[ -z "${_rel_s_ovs_kernelsize}"	] && _rel_s_ovs_kernelsize='echo ${m_ovs_kernelsize}'
################### coarseorb -- nocards
################### coarsecorr
### SECTION=coarsecorr
[ -z "${cc_method}" 		] && cc_method="magfft"
[ -z "${cc_in_pos}" 		] && cc_in_pos="${unspecified}"
[ -z "${cc_nwin}" 		] && cc_nwin="100"
[ -z "${cc_winsize}" 		] && cc_winsize="64 64"
[ -z "${cc_acc}" 		] && cc_acc="32 8"
[ -z "${cc_initoff}" 		] && cc_initoff="orbit"
################### m_filtazi
### SECTION=m_filtazi
[ -z "${af_blocksize}" 		] && af_blocksize="1024"
[ -z "${af_overlap}" 		] && af_overlap="128"
[ -z "${af_hamming}" 		] && af_hamming="0.75"
[ -z "${af_out_master}" 	] && af_out_master="${outputFolder}/${master}.af"
[ -z "${_rel_af_out_master}" 	] && _rel_af_out_master='echo ${outputFolder}/${master}.af'
[ -z "${af_out_slave}" 		] && af_out_slave="${outputFolder}/${slave}.af"
[ -z "${_rel_af_out_slave}" 	] && _rel_af_out_slave='echo ${outputFolder}/${slave}.af'
[ -z "${af_out_format}" 	] && af_out_format="cr4"
################### s_filtazi -- nocards
################### fine
### SECTION=fine
[ -z "${fc_method}" 		] && fc_method="magfft"
[ -z "${fc_nwin}" 		] && fc_nwin="4000"
[ -z "${fc_in_pos}" 		] && fc_in_pos="${unspecified}"
[ -z "${fc_winsize}" 		] && fc_winsize="64 64"
[ -z "${fc_acc}" 		] && fc_acc="32 32"
[ -z "${fc_initoff}" 		] && fc_initoff="coarsecorr"
[ -z "${fc_osfactor}" 		] && fc_osfactor="32"
[ -z "${fc_plot}" 		] && fc_plot="0.4 NOBG"
################### reltiming
### SECTION=reltiming
[ -z "${rte_threshold}" 	] && rte_threshold="0.4"
[ -z "${rte_maxiter}" 		] && rte_maxiter="4000"
[ -z "${_rel_rte_maxiter}" 	] && _rel_rte_maxiter='echo ${fc_nwin}'
[ -z "${rte_k_alpha}" 		] && rte_k_alpha="1.97"
################### demassist
### SECTION=demassist
[ -z "${dac_in_dem}" 		] && dac_in_dem="${sam_in_dem}"
[ -z "${_rel_dac_in_dem}" 	] && _rel_dac_in_dem='echo ${sam_in_dem}'
[ -z "${dac_in_format}" 	] && dac_in_format="${sam_in_format}"
[ -z "${_rel_dac_in_format}" 	] && _rel_dac_in_format='echo ${sam_in_format}'
[ -z "${dac_in_size}" 		] && dac_in_size="${sam_in_size}"
[ -z "${_rel_dac_in_size}" 	] && _rel_dac_in_size='echo ${sam_in_size}'
[ -z "${dac_in_delta}" 		] && dac_in_delta="${sam_in_delta}"
[ -z "${_rel_dac_in_delta}" 	] && _rel_dac_in_delta='echo ${sam_in_delta}'
[ -z "${dac_in_ul}" 		] && dac_in_ul="${sam_in_ul}"
[ -z "${_rel_dac_in_ul}" 	] && _rel_dac_in_ul='echo ${sam_in_ul}'
[ -z "${dac_in_nodata}" 	] && dac_in_nodata="${sam_in_nodata}"
[ -z "${_rel_dac_in_nodata}" 	] && _rel_dac_in_nodata='echo ${sam_in_nodata}'
[ -z "${dac_out_dem}" 		] && dac_out_dem="${outputFolder}/${master}_${slave}.dacdem"
[ -z "${_rel_dac_out_dem}" 	] && _rel_dac_out_dem='echo ${outputFolder}/${master}_${slave}.dacdem'
[ -z "${dac_out_demi}" 		] && dac_out_demi="${outputFolder}/${master}_${slave}.dacdemi"
[ -z "${_rel_dac_out_demi}"	] && _rel_dac_out_demi='echo ${outputFolder}/${master}_${slave}.dacdemi'
[ -z "${dac_out_dem_lp}" 	] && dac_out_dem_lp="${outputFolder}/${master}_${slave}.dacdem_lp"
[ -z "${_rel_dac_out_dem_lp}" 	] && _rel_dac_out_dem_lp='echo ${outputFolder}/${master}_${slave}.dacdem_lp'
################### coregpm
### SECTION=coregpm
[ -z "${cpm_threshold}" 	] && cpm_threshold="0.4"
[ -z "${cpm_degree}" 		] && cpm_degree="2"
[ -z "${cpm_dump}" 		] && cpm_dump="off"
[ -z "${cpm_plot}" 		] && cpm_plot="nobg"
[ -z "${cpm_weight}" 		] && cpm_weight="bamler"
[ -z "${cpm_maxiter}" 		] && cpm_maxiter="4000"
[ -z "${_rel_cpm_maxiter}"	] && _rel_cpm_maxiter='echo ${fc_nwin}'
[ -z "${cpm_k_alpha}" 		] && cpm_k_alpha="1.97"
################### resample
### SECTION=resample
[ -z "${rs_method}" 		] && rs_method="knab6p"
[ -z "${rs_out_file}" 		] && rs_out_file="${outputFolder}/${slave}.rs"
[ -z "${_rel_rs_out_file}" 	] && _rel_rs_out_file='echo ${outputFolder}/${slave}.rs'
[ -z "${rs_out_format}"		] && rs_out_format="cr4"
[ -z "${rs_dbow}" 		] && rs_dbow="0 0 0 0"
[ -z "${rs_dbow_geo}" 		] && rs_dbow_geo="0 0 0 0"
[ -z "${rs_shiftazi}" 		] && rs_shiftazi="on"
################### filtrange
### SECTION=filtrange
[ -z "${rf_method}" 		] && rf_method="adaptive"
[ -z "${rf_fftlength}" 		] && rf_fftlength="64"
[ -z "${rf_overlap}" 		] && rf_overlap="0"
[ -z "${rf_hamming}" 		] && rf_hamming="0.75"
[ -z "${rf_slope}" 		] && rf_slope="0"
[ -z "${rf_nlmean}" 		] && rf_nlmean="15"
[ -z "${rf_threshold}" 		] && rf_threshold="5"
[ -z "${rf_oversample}" 	] && rf_oversample="2"
[ -z "${rf_weightcorr}" 	] && rf_weightcorr="off"
[ -z "${rf_out_master}" 	] && rf_out_master="${outputFolder}/${master}.rf"
[ -z "${_rel_rf_out_master}" 	] && _rel_rf_out_master='echo ${outputFolder}/${master}.rf'
[ -z "${rf_out_slave}" 		] && rf_out_slave="${outputFolder}/${slave}.rf"
[ -z "${_rel_rf_out_slave}" 	] && _rel_rf_out_slave='echo ${outputFolder}/${slave}.rf'
[ -z "${rf_out_format}" 	] && rf_out_format="cr4"
################### interfero
### SECTION=interfero
[ -z "${int_out_cint}" 		] && int_out_cint="${outputFolder}/${master}_${slave}.cint"
[ -z "${_rel_int_out_cint}" 	] && _rel_int_out_cint='echo ${outputFolder}/${master}_${slave}.cint'
[ -z "${int_out_int}" 		] && int_out_int="${outputFolder}/${master}_${slave}.int"
[ -z "${_rel_int_out_int}" 	] && _rel_int_out_int='echo ${outputFolder}/${master}_${slave}.int'
[ -z "${int_multilook}" 	] && int_multilook="5 1"
################### comprefpha
### SECTION=comprefpha
[ -z "${fe_method}" 		] && fe_method="porbits"
[ -z "${fe_degree}" 		] && fe_degree="5"
[ -z "${fe_npoints}" 		] && fe_npoints="501"
[ -z "${fe_in_pos}" 		] && fe_in_pos="${unspecified}"
# [ -z "${fe_out_file}" 	] && fe_out_file=""
################### subtrrefpha
### SECTION=subtrrefpha
[ -z "${srp_method}" 		] && srp_method="polynomial"
[ -z "${srp_out_cint}" 		] && srp_out_cint="${outputFolder}/${master}_${slave}.srp"
[ -z "${_rel_srp_out_cint}" 	] && _rel_srp_out_cint='echo ${outputFolder}/${master}_${slave}.srp'
[ -z "${srp_multilook}" 	] && srp_multilook="1 1"
[ -z "${srp_dumprefpha}" 	] && srp_dumprefpha="off"
[ -z "${srp_out_refpha}" 	] && srp_out_refpha="${outputFolder}/${master}_${slave}.srprefpha"
[ -z "${_rel_srp_out_refpha}" 	] && _rel_srp_out_refpha='echo ${outputFolder}/${master}_${slave}.srprefpha'
[ -z "${srp_out_h2ph}" 		] && srp_out_h2ph="${outputFolder}/${master}_${slave}.srph2ph"
[ -z "${_rel_srp_out_h2ph}" 	] && _rel_srp_out_h2ph='echo ${outputFolder}/${master}_${slave}.srph2ph'
################### comprefdem
### SECTION=comprefdem
[ -z "${crd_in_dem}" 		] && crd_in_dem="${sam_in_dem}"
[ -z "${_rel_crd_in_dem}" 	] && _rel_crd_in_dem='echo ${sam_in_dem}'
[ -z "${crd_in_format}" 	] && crd_in_format="${sam_in_format}"	
[ -z "${_rel_crd_in_format}" 	] && _rel_crd_in_format='echo ${sam_in_format}'
[ -z "${crd_in_size}" 		] && crd_in_size="${sam_in_size}"
[ -z "${_rel_crd_in_size}" 	] && _rel_crd_in_size='echo ${sam_in_size}'
[ -z "${crd_in_delta}" 		] && crd_in_delta="${sam_in_delta}"
[ -z "${_rel_crd_in_delta}" 	] && _rel_crd_in_delta='echo ${sam_in_delta}'
[ -z "${crd_in_ul}" 		] && crd_in_ul="${sam_in_ul}"
[ -z "${_rel_crd_in_ul}" 	] && _rel_crd_in_ul='echo ${sam_in_ul}'
[ -z "${crd_in_nodata}" 	] && crd_in_nodata="${sam_in_nodata}"
[ -z "${_rel_crd_in_nodata}" 	] && _rel_crd_in_nodata='echo ${sam_in_nodata}'
[ -z "${crd_include_fe}" 	] && crd_include_fe="off"
[ -z "${crd_out_dem}" 		] && crd_out_dem="${outputFolder}/${master}_${slave}.crddem"
[ -z "${_rel_crd_out_dem}" 	] && _rel_crd_out_dem='echo ${outputFolder}/${master}_${slave}.crddem'
[ -z "${crd_out_demi}" 		] && crd_out_demi="${outputFolder}/${master}_${slave}.crddemi"
[ -z "${_rel_crd_out_demi}" 	] && _rel_crd_out_demi='echo ${outputFolder}/${master}_${slave}.crddemi'
[ -z "${crd_out_file}" 		] && crd_out_file="${outputFolder}/${master}_${slave}.crd"
[ -z "${_rel_crd_out_file}" 	] && _rel_crd_out_file='echo ${outputFolder}/${master}_${slave}.crd'
[ -z "${crd_out_dem_lp}" 	] && crd_out_dem_lp="${outputFolder}/${master}_${slave}.crddemlp"
[ -z "${_rel_crd_out_dem_lp}" 	] && _rel_crd_out_dem_lp='echo ${outputFolder}/${master}_${slave}.crddemlp'
[ -z "${crd_out_h2ph}" 		] && crd_out_h2ph="${outputFolder}/${master}_${slave}.crdh2ph"
[ -z "${_rel_crd_out_h2ph}" 	] && _rel_crd_out_h2ph='echo ${outputFolder}/${master}_${slave}.crdh2ph'
################### subtrrefdem
### SECTION=subtrrefdem
[ -z "${srd_out_cint}" 		] && srd_out_cint="${outputFolder}/${master}_${slave}.srd"
[ -z "${_rel_srd_out_cint}" 	] && _rel_srd_out_cint='echo ${outputFolder}/${master}_${slave}.srd'
[ -z "${srd_offset}" 		] && srd_offset="0 0"
################### coherence
### SECTION=coherence
[ -z "${coh_method}" 		] && coh_method="include_refdem"
[ -z "${coh_out_ccoh}" 		] && coh_out_ccoh="${outputFolder}/${master}_${slave}.ccoh"
[ -z "${_rel_coh_out_ccoh}" 	] && _rel_coh_out_ccoh='echo ${outputFolder}/${master}_${slave}.ccoh'
[ -z "${coh_out_coh}" 		] && coh_out_coh="${outputFolder}/${master}_${slave}.coh"
[ -z "${_rel_coh_out_coh}" 	] && _rel_coh_out_coh='echo ${outputFolder}/${master}_${slave}.coh'
[ -z "${coh_multilook}"		] && coh_multilook=`calculate_coh_multilook` #default "10 2"
[ -z "${_rel_coh_multilook}"	] && _rel_coh_multilook='calculate_coh_multilook' #default "10 2"
[ -z "${coh_winsize}" 		] && coh_winsize=`calculate_coh_winsize` #default "10 2"
[ -z "${_rel_coh_winsize}" 	] && _rel_coh_winsize='calculate_coh_winsize' #default "10 2"
################### filtphase
### SECTION=filtphase
[ -z "${pf_method}" 		] && pf_method="goldstein"
[ -z "${pf_out_file}" 		] && pf_out_file="${outputFolder}/${master}_${slave}.pf"
[ -z "${_rel_pf_out_file}" 	] && _rel_pf_out_file='echo ${outputFolder}/${master}_${slave}.pf'
[ -z "${pf_in_file}" 		] && pf_in_file="${unspecified}"
[ -z "${pf_alpha}" 		] && pf_alpha="0.2"
[ -z "${pf_overlap}" 		] && pf_overlap="3"
[ -z "${pf_blocksize}" 		] && pf_blocksize="32"
[ -z "${pf_kernel}" 		] && pf_kernel="1 2 3 2 1"
[ -z "${pf_in_kernel2d}" 	] && pf_in_kernel2d="${unspecified}"
################### unwrap
### SECTION=unwrap
[ -z "${uw_method}" 		] && uw_method="snaphu"
[ -z "${uw_out_file}" 		] && uw_out_file="${outputFolder}/${master}_${slave}.uw"
[ -z "${_rel_uw_out_file}" 	] && _rel_uw_out_file='echo ${outputFolder}/${master}_${slave}.uw'
[ -z "${uw_out_format}" 	] && uw_out_format="real4" # default "hgt"
[ -z "${uw_snaphu_mode}" 	] && uw_snaphu_mode="defo" # default "topo"
[ -z "${uw_snaphu_coh}" 	] && uw_snaphu_coh="${coh_out_coh}"
[ -z "${_rel_uw_snaphu_coh}" 	] && _rel_uw_snaphu_coh='echo ${coh_out_coh}'
[ -z "${uw_snaphu_log}" 	] && uw_snaphu_log="${outputFolder}/${master}_${slave}.uwlog"
[ -z "${_rel_uw_snaphu_log}" 	] && _rel_uw_snaphu_log='echo ${outputFolder}/${master}_${slave}.uwlog'
[ -z "${uw_snaphu_init}" 	] && uw_snaphu_init="mst"
[ -z "${uw_snaphu_verbose}" 	] && uw_snaphu_verbose="on"
[ -z "${uw_snaphu_dumponlyconf}" ] && uw_snaphu_dumponlyconf="off"
################### estorbits
### SECTION=estorbits
[ -z "${eo_method}"             ] && eo_method="lsq"
[ -z "${eo_in_dem_lp}"          ] && eo_in_dem_lp="${outputFolder}/${master}_${slave}.crddemlp"
[ -z "${_rel_eo_in_dem_lp}"     ] && _rel_eo_in_dem_lp='echo ${outputFolder}/${master}_${slave}.crddemlp'
[ -z "${eo_out_res}"            ] && eo_out_res="${outputFolder}/${master}_${slave}.eores"
[ -z "${_rel_eo_out_res}"       ] && _rel_eo_out_res='echo ${outputFolder}/${master}_${slave}.eores'
[ -z "${eo_weighting}"          ] && eo_weighting="none"
[ -z "${eo_npoints}"            ] && eo_npoints="1000"
[ -z "${eo_in_pos}"             ] && eo_in_pos="${unspecified}"
[ -z "${eo_threshold}"          ] && eo_threshold="0"
[ -z "${eo_maxiter}"            ] && eo_maxiter="0"
[ -z "${eo_k_alpha}"            ] && eo_k_alpha="3.29"
[ -z "${eo_searchspace}"        ] && eo_searchspace="15 15"
[ -z "${eo_reforbit}"           ] && eo_reforbit="${outputFolder}/${master}.res"
[ -z "${_rel_eo_reforbit}"      ] && _rel_eo_reforbit='echo ${outputFolder}/${master}.res'
[ -z "${eo_out_data}"           ] && eo_out_data="${outputFolder}/${master}_${slave}.eodata"
[ -z "${_rel_eo_out_data}"      ] && _rel_eo_out_data='echo ${outputFolder}/${master}_${slave}.eodata'
[ -z "${eo_degree}"             ] && eo_degree="1"
[ -z "${eo_constrain}"          ] && eo_constrain="0"
[ -z "${eo_nobs}"               ] && eo_nobs="1000"
################### dinsar
### SECTION=dinsar
[ -z "${di_out_file}" 		] && di_out_file="${outputFolder}/${master}_${slave}.di"
[ -z "${_rel_di_out_file}" 	] && _rel_di_out_file='echo ${outputFolder}/${master}_${slave}.di'
[ -z "${di_in_topomaster}" 	] && di_in_topomaster="${m_resfile}"
[ -z "${_rel_di_in_topomaster}" ] && _rel_di_in_topomaster='echo ${m_resfile}'
[ -z "${di_in_toposlave}" 	] && di_in_toposlave="${unspecified}"
[ -z "${di_in_topoint}" 	] && di_in_topoint="${unspecified}"
[ -z "${di_out_scaled}" 	] && di_out_scaled="${outputFolder}/${master}_${slave}.discaled"
[ -z "${_rel_di_out_scaled}" 	] && _rel_di_out_scaled='echo ${outputFolder}/${master}_${slave}.discaled'
################### slant2h
### SECTION=slant2h
[ -z "${s2h_method}" 		] && s2h_method="ambiguity"
[ -z "${s2h_out_hei}" 		] && s2h_out_hei="${outputFolder}/${master}_${slave}.s2hhei"
[ -z "${_rel_s2h_out_hei}" 	] && _rel_s2h_out_hei='echo ${outputFolder}/${master}_${slave}.s2hhei'
[ -z "${s2h_out_phi}" 		] && s2h_out_phi="${outputFolder}/${master}_${slave}.s2hphi"
[ -z "${_rel_s2h_out_phi}" 	] && _rel_s2h_out_phi='echo ${outputFolder}/${master}_${slave}.s2hphi'
[ -z "${s2h_out_lam}" 		] && s2h_out_lam="${outputFolder}/${master}_${slave}.s2hlam"
[ -z "${_rel_s2h_out_lam}" 	] && _rel_s2h_out_lam='echo ${outputFolder}/${master}_${slave}.s2hlam'
[ -z "${s2h_npoints}" 		] && s2h_npoints="200"
[ -z "${s2h_degree1d}" 		] && s2h_degree1d=2
[ -z "${s2h_nheights}" 		] && s2h_nheights="$((${s2h_degree1d}+1))"
[ -z "${_rel_s2h_nheights}" 	] && _rel_s2h_nheights='echo $((${s2h_degree1d}+1))'
[ -z "${s2h_degree2d}" 		] && s2h_degree2d="5"
################### geocode
### SECTION=geocode
[ -z "${geo_out_phi}" 		] && geo_out_phi="${outputFolder}/${master}_${slave}.geophi"
[ -z "${_rel_geo_out_phi}" 	] && _rel_geo_out_phi='echo ${outputFolder}/${master}_${slave}.geophi'
[ -z "${geo_out_lam}" 		] && geo_out_lam="${outputFolder}/${master}_${slave}.geolam"
[ -z "${_rel_geo_out_lam}" 	] && _rel_geo_out_lam='echo ${outputFolder}/${master}_${slave}.geolam'
################### 
