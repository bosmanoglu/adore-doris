#!/bin/bash
#
# USAGE:
#       p singleMasterStack.adr
#
# DESCRIPTION:
#  singleMasterStack.adr is an ADORE script.  
#  It generates a single master stack interferogram using the ADORE settings. 
#
# INPUT:
#  There are no input parameters. 
#  
# OUTPUT:
#  Creates ${projectFolder}/process/${runName}/ and processes crops & interferograms
#  It runs the following DORIS steps:
#    For crops: s_readfiles, s_porbits, s_crop, s_ovs 
#    For i12s: coarseorb, coarsecorr, fine, coregpm, coregpm, resample, interfero, comprefpha, subtrrefpha
#

function checkAndProcess(){
  if check -p ${1} 
  then  
    bold "Working in $PWD"
    bold "p ${1}"
    p ${1}
  else    
    return 1;
  fi
}

# we will be changing directories
# save the current dir.
CALLDIR=$PWD;
# DORIS does not allow master and slave to be the same. 
# We assign master as dummy ans slave as the current scene.      
stackMaster=${master};
settings apply -r master="dummy"

for scene in ${scenes_include[*]}
do
     bold "Processing ${scene}"
     settings apply -r slave=${scene} outputFolder="${cropsFolder}/${scene}"
     mkdir -p "${outputFolder}"
     cd "${outputFolder}"    
     settings save

     #see function checkAndProcess above...
     checkAndProcess s_readfiles    
     checkAndProcess s_porbits
     checkAndProcess s_crop
     checkAndProcess s_ovs
     
     sleep 2 #pause two seconds to allow user interrupts
done

####Now the i12s
#Set the stack master.
settings apply -r master=${stackMaster}

for scene in ${scenes_include[*]}
do
   if [ "${master}" == "${scene}" ]; then
     continue
   fi
     bold "Processing ${master}_${scene}"
     settings apply -r slave=${scene} outputFolder="${i12sFolder}/${master}_${scene}"
     mkdir -p "${outputFolder}"
     cd "${outputFolder}"
     settings save
     cp ${cropsFolder}/${master}/${master}.res ${outputFolder}/${master}.res
     cp ${cropsFolder}/${slave}/${slave}.res ${outputFolder}/${slave}.res

     checkAndProcess coarseorb
     checkAndProcess coarsecorr
     checkAndProcess fine
     checkAndProcess coregpm
     checkAndProcess resample
     checkAndProcess interfero
     checkAndProcess comprefpha
     checkAndProcess subtrrefpha

     sleep 2 #pause two seconds to allow user interrupts
done


#go back to where we started
cd ${CALLDIR}

return 0
