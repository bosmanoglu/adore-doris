#!/bin/bash
#
# USAGE:
#       quejob adore_command [outputFolder]
#
# DESCRIPTION:
#  quejob is an internal ADORE command.  
#  It runs the given adore command in the Torque-PBS system.
#  Quejob uses the Torque-PBS system to distribute jobs to other computers.
#
# INPUT:
#	adore_command: commands to submit to the PBS. If multiple commands are used, this should be a string in quotations. See examples.
#
#   OPTIONAL:	
#	outputFolder: specify output folder for the ADORE command. Default is current folder ("$PWD").
#  
# OUTPUT:
#  Creates ${tmpFolder}/{randomFile}.set and  ${tmpFolder}/{randomFile}.sh 
#

function createJob(){
local qsubPath=`which qsub`
[ "${qsubPath:-IsEmpty}" == "IsEmpty" ] && echo "Torque PBS, qsub, not found." && return 110

local commands=${1};
local CALLDIR=${2-$PWD};
generateRandomString 
local queJobRandStr=${randomString}
mkdir -p ${tmpFolder} 
local originalSettingsFile=${tmpFolder}/${queJobRandStr}.set
settings save ${originalSettingsFile} 1>> ${tmpFolder}/${queJobRandStr}.log #Do not dump messages

cat >${tmpFolder}/${queJobRandStr}.sh<<_EOFFILE
#! /bin/csh
 #PBS -N parallelJob
 #PBS -l nodes=1
 #PBS -q batch
 #PBS -V
 #PBS -l walltime=8:00:00
 #PBS -m n
 #PBS -e ${CALLDIR}/${queJobRandStr}.err
 #PBS -o ${CALLDIR}/${queJobRandStr}.out
 cd ${CALLDIR}
 ${ADORESCR}/adore -u "${tmpFolder}/${queJobRandStr}.set" "${commands}"
_EOFFILE

#submit the job to the que
qsub ${tmpFolder}/${queJobRandStr}.sh

}

createJob "${@}"
