#verbose
if [ "${v-notVerbose}" != "notVerbose" ]; then
  set -x
fi

#When started from AGOOEY, we do not source user bash.rc
#Therefore ADORESCR is probably not set, and we may have to set it.
if [ "${ADORESCR:-isEmpty}" = "isEmpty" ]; then
  ADORESCR=`echo $(cd $(dirname ${BASH_SOURCE[@]}); pwd -P)`
  if [ -d ${ADORESCR}/fun ]; then 
    export ADORESCR
  fi
fi
# also agooey does not source ~/.bashrc when launched from unity
# let's check for GMT in ubuntu.
if [ ! `which psxy` ]; then
  if [ -f /usr/lib/gmt/bin/psxy ]; then
    export PATH=${PATH}:/usr/lib/gmt/bin
  fi
fi

# THE BELOW LINES BREAK ${i} variable
#if [ "${g-notGui}" != "notGui" ]; then
#  #Gui on
#  #If we run agooey, we do not source the users bashrc. This attempts to
#  #load it
#  if [ -f ~/.bashrc ]; then
#    . ~/.bashrc
#  fi 
#fi
#echo "5-i:.${i}. g:.${g}."


###### LOAD SETTINGS
#load functions
source ${ADORESCR}/fun/functions
#initialize ADORE
source ${ADORESCR}/fun/initialize

if [ "${i-notInteractive}" == "notInteractive" ]; then
  #not interactive
  #turn batch mode on. 
  batch="on"
fi 

if [ -n "${dorisProcess}" ]; then
  p ${dorisProcess}
fi

#if adoreCommand was specified run adoreCommand.
[ -n "${adoreCommand}" ] && eval "${adoreCommand}" #${ADOREFOLDER}/scr/${adoreCommand}.sh

history -r ${adoreHistoryFile}
PS1="ADORE: "

#Only if interactive shell
if [ "${i-notInteractive}" != "notInteractive" ]; then
  ### ipython style history search
  ### http://davidcramer.posterous.com/code/129/bash-trick-history-searching-ala-ipython.html
  # Enable bash history
  export HISTCONTROL=erasedups
  export HISTSIZE=10000
  shopt -s histappend

  # These set up/down to do the history searching
  bind '"\e[A"':history-search-backward
  bind '"\e[B"':history-search-forward  
  ### end ipython style history search 

  PATH=${PATH}:${ADORESCR} #${_ADOREPATH}
                           #unset _ADOREPATH
  unset i #If this line is omitted, all spawned ADORE jobs
          # will run in interactive mode.

  if [ "${g-notGui}" == "notGui" ]; then 
    declare -r PROMPT_COMMAND="setPS1" 
        			#setPS1 function will check the 
                                # settings file folder and if not in
                                # current folder will change the prompt
                                # to !ADORE:
  fi
  #pretty LS
  if [ "$TERM" != "dumb" ]; then
    [ -e "${ADORESCR}/.dircolors" ] && eval "`dircolors -b ${ADORESCR}/.dircolors`"
    alias ls='ls --color=auto'
  fi
fi

#Only if gui mode
if [ "${g-notGui}" != "notGui" ]; then
  #Gui on
  declare -r PROMPT_COMMAND="setPS1 && settings list &> /tmp/adore${PPID}.set"
fi

