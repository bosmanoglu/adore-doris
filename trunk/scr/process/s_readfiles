#!/bin/bash
#
# USAGE:
#	s_readfiles
#
# DESCRIPTION:
#  s_readfiles is a builtin ADORE process.  
#  It runs the DORIS step with the same name. 
#
# It is the same as step M_READFILES but then for the slave image. See M_READFILES (? m_readfiles) for more information on this step.
#
# In order to be compatible with official DORIS release v4.02, the current ADORE implementation makes calls for reading Gamma SLC files, if $slcType is specified as gamma. This will be removed when DORIS v4.03 is released, because it will support reading Gamma SLC files within DORIS.
#
# INPUT:
#
# OUTPUT:
#  Outputs generated by Doris:
#   Slave result file
#
# REFERENCE:
# http://doris.tudelft.nl/usermanual/node37.html

slcType=`echo ${slcType-undefined} | tr "[:upper:]" "[:lower:]"`
#echo ${slcType}
#check if slcType exists
case "${slcType}" in
  gamma)
    echo "Reading Gamma SLC"
    slaveDataFolder=`dirname "${s_in_dat}"`
    #get parFile SysFile
    parFile=`ls ${dataFolder}/${slave}/${gammaParFile} 2>/dev/null | tr -d '\n'`
    if [ ! -e "${parFile}" ]; then
      echo " I can not find the parameter file ("${gammaParFile}") inside ${slaveDataFolder}"
      return -1;
    fi

    sysFile=`ls ${dataFolder}/${slave}/${gammaSysFile} 2>/dev/null | tr -d '\n'`
    if [ ! -e "${sysFile}" ]; then
      echo " I can not find the parameter file ("${gammaSysFile}") inside ${slaveDataFolder}"
      return -1;
    fi

    gammaReadfiles.csh ${parFile} ${sysFile} ${s_in_dat} ${gammaByteSwap} > ${outputFolder}/${slave}.res
    [ $? -eq 0 ] && echo "${dorisProcess}: SUCCESS"
    unset slaveDataFolder parFile sysFile    
  ;;
  *)
    #if [ "${slcType-undefined}" == "undefined" ]; then
    #standard processing
    pp ${dorisProcess}
    doris ${outputFolder}/${dorisProcess}.drs
    [ $? -eq 0 ] && echo "${dorisProcess}: SUCCESS"
  ;;
esac
