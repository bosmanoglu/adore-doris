#!/bin/bash
#backup variables
singleStackMaster=${master}
#end backup

#Output some information on not-default parameters
cc_initoff="orbit"
logFile=${outputFolder}/${runName}.log
#
for folder in ${dataFolder}/*
do
 if [ -d "${folder}" ]; then #check if it is a folder
   master=${folder##*/}
   if [ -e ${excludesFile} ]; then #if excludes file exist check to see if this folder is excluded.
     inExclude=`grep ${master} ${excludesFile}`
   fi
   if [ -z "${inExclude}" ]; then #if not in excludesFile we will process this
     echo "Processing ${master}"
     mkdir -p "${cropsFolder}/${master}"
     outputFolder="${cropsFolder}/${master}"
     #populate m_in_dat, vol,lea null
     #TEST echo ls ${dataFolder}/${master}/${dataFile}     
     m_in_dat=`ls ${dataFolder}/${master}/${dataFile} | tr -d '\n'`
     m_in_vol=`ls ${dataFolder}/${master}/${volumeFile} 2>/dev/null | tr -d '\n'`
     m_in_lea=`ls ${dataFolder}/${master}/${leaderFile} 2>/dev/null | tr -d '\n'`
     m_in_null=`ls ${dataFolder}/${master}/${nullFile}  2>/dev/null | tr -d '\n'`
     
     m_resfile="${outputFolder}/${master}.res"
     alreadyProcessed=`${ADORESCR}/readRes.sh ${m_resfile} process_control readfiles`
     [ ! ${alreadyProcessed-0} ] && p m_readfiles     
     
     #check if orb_dir is defined
     if [ -d "${m_orb_dir}" ]; then
       alreadyProcessed=`${ADORESCR}/readRes.sh ${m_resfile} process_control precise_orbits`     
       [ ${alreadyProcessed-0} -eq 0 ] &&  p m_porbits
     fi
     
     #now do crop
     m_crop_in=${m_in_dat}
     m_crop_out=${outputFolder}/${master}.crop
     
     alreadyProcessed=`${ADORESCR}/readRes.sh ${m_resfile} process_control crop`
     [ ${alreadyProcessed-0} -eq 0 ] && p m_crop
     
     #now do oversample if required
     if [[ ${m_ovs_fact_rng} -gt 1 || ${m_ovs_fact_azi} -gt 1 ]]; then
       alreadyProcessed=`${ADORESCR}/readRes.sh ${m_resfile} process_control oversample`
       [ ${alreadyProcessed-0} -eq 0 ] && p m_ovs
     fi
     
   fi
 fi
done

####Now the i12s
#put variables back
master=${singleStackMaster}

for folder in ${cropsFolder}/*
do
  if [ -d "${folder}" ]; then #check if it is a folder
   slave=${folder##*/}
   if [ -e ${excludesFile} ]; then #if excludes file exist check to see if this folder is excluded.
     inExclude=`grep ${master} ${excludesFile}`
   fi
   if [ "${master}" == "${slave}" ]; then
     continue
   fi
   if [ -z "${inExclude}" ]; then #if not in excludesFile we will process this
     echo "Processing ${master}_${slave}"
     outputFolder="${i12sFolder}/${master}_${slave}"
     mkdir -p "${outputFolder}"
     cp ${cropsFolder}/${master}/${master}.res ${outputFolder}/${master}.res
     cp ${cropsFolder}/${slave}/${slave}.res ${outputFolder}/${slave}.res

     i_resfile="${outputFolder}/${master}_${slave}.res"
     s_resfile="${outputFolder}/${slave}.res"
     m_resfile="${outputFolder}/${master}.res"

     # coarseorb
     if [ -e ${i_resfile} ]; then
       alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control coarse_orbits`
       [ ${alreadyProcessed-0} -eq 0 ] && p coarseorb
     else
       p coarseorb
     fi
     
     # coarsecorr
     cc_nwin=100
     cc_initoff="orbit"
     alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control coarse_correl`
     [ "${alreadyProcessed-0}" -eq 0 ] && p coarsecorr

     # fine
     fc_nwin=4000
     fc_initoff="coarsecorr"
     alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control fine_coreg`
     [ ${alreadyProcessed-0} -eq 0 ] && p fine
     
     # coregpm
     cpm_degree="2"
     cpm_maxiter="${fc_nwin}"
     alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control comp_coreg`
     [ ${alreadyProcessed-0} -eq 0 ] && p coregpm

     # resample
     alreadyProcessed=`${ADORESCR}/readRes.sh ${s_resfile} process_control resample`
     [ ${alreadyProcessed} -eq 0 ] && p resample
     
     # interfero
     alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control interfero`
     [ ${alreadyProcessed-0} -eq 0 ] && p interfero
          
     # comprefpha
     alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control comp_refphase`
     [ ${alreadyProcessed-0} -eq 0 ] && p comprefpha
     
     # subtrrefpha
     alreadyProcessed=`${ADORESCR}/readRes.sh ${i_resfile} process_control subtr_refphase`
     [ ${alreadyProcessed-0} -eq 0 ] && p subtrrefpha

   fi
  fi
done
