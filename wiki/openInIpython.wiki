#summary Opens the current processing results in ipython.
#labels Phase-Support,Help

=USAGE:=
{{{
   openInIpython
   openInIpython ${ADOREFOLDER}/lib/python/fun/script.py
   openInIpython python command
}}}
=DESCRIPTION:=
openInIpython is an ADORE function which exports the settings from ADORE and imports them to ipython. It provides several objects and lists which allow easy access to project settings and results within ipython. These objects are listed in the output section below.
=INPUT:=
 There are no required input parameters for this command.
 ==OPTIONAL:==
  * python_script: This argument can be a python script utilizing the objects created. 
  * python_command: If the argument is not a file, then it is interpreted as a python command.
=OUTPUT=
  The below variables are set within ipython. The lists and settings contain the same information. The objects provide an easier method to browse through this information, because they allow tab completion.
  * `A`: Adore object. Provides access to methods and other objects. The followings objects are also available in the user namespace for backwards compatibility: `settings, setobj, mres, mobj, sres, sobj, ires, iobj`.
  * `A.settings`: List of settings for the current processing.
  * `A.setobj`: Settings object. 
  * `A.mres`: List generated from master result file.
  * `A.mobj`: Master result object.
  * `A.sres`: List generated from slave result file.
  * `A.sobj`: Slave result object.
  * `A.ires`: List generated from interferogram result file.
  * `A.iobj`: Interferogram result object.
  If GIAnT is properly installed and available in the `${PYTHONPATH}`, the following is also initiated.
  * `G.RAW_STACK`:
  * `G.PROC_STACK`:
  * `G.LS`:
=FILES and REFERENCES:=
{{{
 ${ADOREFOLDER}/lib/python/ipython.rc
 ${ADOREFOLDER}/lib/python/adore.py
 http://ipython.org/
 http://matplotlib.org/
}}}
=EXAMPLE:=
{{{
 openInIpython
}}}
=KNOWN BUGS:=
 When a python script is provided, only the number of lines are output which is quite useless.